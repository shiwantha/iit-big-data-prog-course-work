{"paragraphs":[{"text":"%pyspark\n\n# Q2.3\n\n# redaing the csv file into a spark datafarme\ndf = spark.read.csv(\"/data/listings.csv\", header=\"true\", inferSchema=\"true\")\n# show the first ten lines of the dataframe\ndf.head(5)","user":"anonymous","dateUpdated":"2020-01-12T14:01:21+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[Row(id=u'49091', name=u'COZICOMFORT LONG TERM STAY ROOM 2', host_id=u'266763', host_name=u'Francesca', neighbourhood_group=u'North Region', neighbourhood=u'Woodlands', latitude=1.44255, longitude=u'103.7958', room_type=u'Private room', price=83, minimum_nights=180, number_of_reviews=u'1', last_review=u'2013-10-21', reviews_per_month=0.01, calculated_host_listings_count=2, availability_365=365),\n Row(id=u'50646', name=u'Pleasant Room along Bukit Timah', host_id=u'227796', host_name=u'Sujatha', neighbourhood_group=u'Central Region', neighbourhood=u'Bukit Timah', latitude=1.33235, longitude=u'103.78521', room_type=u'Private room', price=81, minimum_nights=90, number_of_reviews=u'18', last_review=u'2014-12-26', reviews_per_month=0.28, calculated_host_listings_count=1, availability_365=365),\n Row(id=u'56334', name=u'COZICOMFORT', host_id=u'266763', host_name=u'Francesca', neighbourhood_group=u'North Region', neighbourhood=u'Woodlands', latitude=1.44246, longitude=u'103.79667', room_type=u'Private room', price=69, minimum_nights=6, number_of_reviews=u'20', last_review=u'2015-10-01', reviews_per_month=0.2, calculated_host_listings_count=2, availability_365=365),\n Row(id=u'71609', name=u'Ensuite Room (Room 1 & 2) near EXPO', host_id=u'367042', host_name=u'Belinda', neighbourhood_group=u'East Region', neighbourhood=u'Tampines', latitude=1.34541, longitude=u'103.95712', room_type=u'Private room', price=206, minimum_nights=1, number_of_reviews=u'14', last_review=u'2019-08-11', reviews_per_month=0.15, calculated_host_listings_count=9, availability_365=353),\n Row(id=u'71896', name=u'B&B  Room 1 near Airport & EXPO', host_id=u'367042', host_name=u'Belinda', neighbourhood_group=u'East Region', neighbourhood=u'Tampines', latitude=1.34567, longitude=u'103.95963', room_type=u'Private room', price=94, minimum_nights=1, number_of_reviews=u'22', last_review=u'2019-07-28', reviews_per_month=0.22, calculated_host_listings_count=9, availability_365=355)]"}]},"apps":[],"jobName":"paragraph_1578837668817_-819971804","id":"20200111-140014_14383937","dateCreated":"2020-01-12T14:01:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4307","dateFinished":"2020-01-12T14:01:21+0000","dateStarted":"2020-01-12T14:01:21+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=447","http://172.17.0.2:4040/jobs/job?id=448","http://172.17.0.2:4040/jobs/job?id=449"],"interpreterSettingId":"spark"}}},{"text":"%pyspark\n# Q2.3.1\nfrom pyspark.sql import *\n\n#DataFrame as a SQL temporary view\ndf.createOrReplaceTempView(\"tempory_view\")\n# get property owners \nowners = spark.sql(\"select host_id, host_name, COUNT(*) as no_of_prop from tempory_view group by host_id, host_name Order by no_of_prop DESC\")\n ##Get the owners total\nowners_count=owners.count()\nmulti_prop_owners = spark.sql(\"select host_id, host_name, COUNT(*) as no_of_prop from tempory_view group by host_id, host_name HAVING no_of_prop>1 Order by no_of_prop DESC\")\nmulti_prop_owners_count = multi_prop_owners.count()\npercentage = (float(multi_prop_owners_count)/owners_count)*100.0\nprint(\"Percentage of owners who have more than one property: \")\nprint(percentage)\n","user":"anonymous","dateUpdated":"2020-01-12T14:01:25+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Percentage of owners who have more than one property: \n27.3163528977\n"}]},"apps":[],"jobName":"paragraph_1578837668817_428933492","id":"20200111-140605_1320020336","dateCreated":"2020-01-12T14:01:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4308","dateFinished":"2020-01-12T14:01:27+0000","dateStarted":"2020-01-12T14:01:25+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=450","http://172.17.0.2:4040/jobs/job?id=451","http://172.17.0.2:4040/jobs/job?id=452","http://172.17.0.2:4040/jobs/job?id=453"],"interpreterSettingId":"spark"}}},{"text":"%pyspark\n# Q2.3.2\nimport pandas as pd \nfrom pyspark.sql.functions import *\n\n\nreviewDf = spark.sql(\"Select month(last_review) month, count(*) as review_count from tempory_view where month(last_review) is not null group by month order by month\")\nprint(reviewDf.show())\n\nplotting = reviewDf.toPandas()\nhistPlot = plotting.plot.bar(x='month', y='review_count', color='b')","user":"anonymous","dateUpdated":"2020-01-12T14:01:29+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----+------------+\n|month|review_count|\n+-----+------------+\n|    1|         241|\n|    2|         236|\n|    3|         235|\n|    4|         249|\n|    5|         334|\n|    6|         455|\n|    7|         983|\n|    8|        1822|\n|    9|         149|\n|   10|         125|\n|   11|         111|\n|   12|         201|\n+-----+------------+\n\nNone\n\n"},{"type":"IMG","data":"\n\n"},{"type":"TEXT","data":"<matplotlib.figure.Figure at 0x7f9e7682f0d0>"}]},"apps":[],"jobName":"paragraph_1578837668817_-907012134","id":"20200111-140712_635162941","dateCreated":"2020-01-12T14:01:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4309","dateFinished":"2020-01-12T14:01:31+0000","dateStarted":"2020-01-12T14:01:29+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=454","http://172.17.0.2:4040/jobs/job?id=455","http://172.17.0.2:4040/jobs/job?id=456"],"interpreterSettingId":"spark"}}},{"text":"%pyspark\n# Q2.3.3\n\nevery_day_open = spark.sql(\"Select * from tempory_view where availability_365 =365\")\nevery_day_open.createOrReplaceTempView(\"365_open\")\ntop5avg = spark.sql(\"Select neighbourhood_group, neighbourhood, count(*) as count from 365_open where neighbourhood in (Select neighbourhood from 365_open Group By neighbourhood_group, neighbourhood order By avg(price) Limit 5) group by neighbourhood_group, neighbourhood\")\ntop5avg.show()","user":"anonymous","dateUpdated":"2020-01-12T14:01:34+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------------+--------------------+-----+\n|neighbourhood_group|       neighbourhood|count|\n+-------------------+--------------------+-----+\n|        West Region|Western Water Cat...|    1|\n|        West Region|       Bukit Panjang|    1|\n|       North Region|           Woodlands|   12|\n|  North-East Region|           Serangoon|    8|\n|       North Region|        Lim Chu Kang|    1|\n+-------------------+--------------------+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1578837668817_406717889","id":"20200111-140749_1047482995","dateCreated":"2020-01-12T14:01:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4310","dateFinished":"2020-01-12T14:01:35+0000","dateStarted":"2020-01-12T14:01:34+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=457","http://172.17.0.2:4040/jobs/job?id=458","http://172.17.0.2:4040/jobs/job?id=459","http://172.17.0.2:4040/jobs/job?id=460","http://172.17.0.2:4040/jobs/job?id=461","http://172.17.0.2:4040/jobs/job?id=462"],"interpreterSettingId":"spark"}}},{"text":"%pyspark\n# 3. import ML Libs\n\nfrom pyspark.sql import SparkSession, Row, functions, types\nfrom pyspark.sql.functions import udf\nimport numpy as np\nimport pandas as pd\nfrom pandas import DataFrame\nfrom pyspark.ml.feature import HashingTF, IDF, Tokenizer, VectorAssembler, StringIndexer\nfrom pyspark.ml.evaluation import MulticlassClassificationEvaluator\nfrom pyspark.mllib.regression import LabeledPoint\nfrom pyspark.ml.classification import NaiveBayes\nfrom pyspark.mllib.evaluation import MultilabelMetrics\nfrom pyspark.mllib.linalg import Vectors\nfrom pyspark.ml import Pipeline\nfrom pyspark.ml.tuning import CrossValidator, ParamGridBuilder\nfrom pyspark.mllib.evaluation import MulticlassMetrics, BinaryClassificationMetrics\nfrom pyspark.rdd import RDD\nfrom pyspark.sql.functions import col\nimport pandas as pd \nimport numpy as np \nfrom pyspark.sql import functions as F\nfrom pyspark.sql.functions import when\nfrom pyspark.sql import SparkSession\nfrom pyspark.ml.feature import VectorAssembler\nfrom pyspark.ml.classification import LogisticRegression\nfrom pyspark.mllib.evaluation import MulticlassMetrics\nfrom pyspark.sql import functions as F\nfrom pyspark.sql.functions import lit\nfrom datetime import date\nfrom pyspark.sql.types import StructField\nfrom pyspark.sql.types import StructType\nfrom pyspark.sql.types import *\nfrom pyspark.mllib.evaluation import MulticlassMetrics\nfrom pyspark.ml.evaluation import MulticlassClassificationEvaluator\nfrom pyspark.mllib.evaluation import MultilabelMetrics\nfrom pyspark.mllib.evaluation import MulticlassMetrics, BinaryClassificationMetrics\nfrom pyspark.rdd import RDD","user":"anonymous","dateUpdated":"2020-01-12T14:01:38+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1578837668818_1635452814","id":"20200112-061734_1373884033","dateCreated":"2020-01-12T14:01:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4311","dateFinished":"2020-01-12T14:01:38+0000","dateStarted":"2020-01-12T14:01:38+0000"},{"text":"%pyspark\n\n# columns\ncolumns=['id','latitude','longitude','neighbourhood_group']\ntraining_df = df.select(columns)\n#training_df.show()\ntraining_df = training_df.na.drop()\ntraining_df = training_df.withColumn(\"longitude\", training_df[\"longitude\"].cast(DoubleType()))\ntraining_df.printSchema()\n\ntraining_df.createOrReplaceTempView(\"listings_columns\")\n\ntraining_df_detailed = spark.sql(\"select neighbourhood_group, count(id) id_count from listings_columns group by neighbourhood_group order by id_count DESC\")\ntraining_df_detailed.show()\n\n#ignore minimul popular regions\ndef getPopularity(region):\n    if region=='Central Region': return 1\n    elif region=='East Region': return 2\n    elif region=='North Region': return 3\n    elif region=='North-East Region': return 4\n    elif region=='West Region': return  5\n    else: return 6\n    \nudfToInt = udf(getPopularity, IntegerType())\ntraining_df_detailed = training_df.withColumn(\"popularity\", udfToInt(\"neighbourhood_group\"))\n\npopularity_df = training_df_detailed.filter(training_df_detailed['popularity'] < 6)\npopularity_df.show()","user":"anonymous","dateUpdated":"2020-01-12T14:01:08+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------+--------+---------+-------------------+\n|    id|latitude|longitude|neighbourhood_group|\n+------+--------+---------+-------------------+\n| 49091| 1.44255| 103.7958|       North Region|\n| 50646| 1.33235|103.78521|     Central Region|\n| 56334| 1.44246|103.79667|       North Region|\n| 71609| 1.34541|103.95712|        East Region|\n| 71896| 1.34567|103.95963|        East Region|\n| 71903| 1.34702|103.96103|        East Region|\n| 71907| 1.34348|103.96337|        East Region|\n|241503| 1.32304|103.91363|        East Region|\n|241508| 1.32458|103.91163|        East Region|\n|241510| 1.32461|103.91191|        East Region|\n|275343| 1.28875|103.80814|     Central Region|\n|275344| 1.28837|103.81099|     Central Region|\n|289234| 1.34561|103.95984|        East Region|\n|294281| 1.31125|103.83816|     Central Region|\n|324945| 1.28976|103.80896|     Central Region|\n|330089| 1.28677|103.81244|     Central Region|\n|330095| 1.28537|103.81087|     Central Region|\n|344803| 1.34943|103.95951|        East Region|\n|355955|  1.3142|103.90232|     Central Region|\n|369141|  1.3115|103.83759|     Central Region|\n+------+--------+---------+-------------------+\nonly showing top 20 rows\n\nroot\n |-- id: string (nullable = true)\n |-- latitude: double (nullable = true)\n |-- longitude: double (nullable = true)\n |-- neighbourhood_group: string (nullable = true)\n\n+-------------------+--------+\n|neighbourhood_group|id_count|\n+-------------------+--------+\n|     Central Region|    6301|\n|        West Region|     539|\n|        East Region|     508|\n|  North-East Region|     344|\n|       North Region|     203|\n|             Museum|       2|\n|      Downtown Core|       2|\n|        Jurong West|       1|\n|            Orchard|       1|\n|             Rochor|       1|\n|        Bukit Merah|       1|\n|            Punggol|       1|\n|          Sembawang|       1|\n|            Hougang|       1|\n|   Southern Islands|       1|\n+-------------------+--------+\n\n+------+--------+---------+-------------------+----------+\n|    id|latitude|longitude|neighbourhood_group|popularity|\n+------+--------+---------+-------------------+----------+\n| 49091| 1.44255| 103.7958|       North Region|         3|\n| 50646| 1.33235|103.78521|     Central Region|         1|\n| 56334| 1.44246|103.79667|       North Region|         3|\n| 71609| 1.34541|103.95712|        East Region|         2|\n| 71896| 1.34567|103.95963|        East Region|         2|\n| 71903| 1.34702|103.96103|        East Region|         2|\n| 71907| 1.34348|103.96337|        East Region|         2|\n|241503| 1.32304|103.91363|        East Region|         2|\n|241508| 1.32458|103.91163|        East Region|         2|\n|241510| 1.32461|103.91191|        East Region|         2|\n|275343| 1.28875|103.80814|     Central Region|         1|\n|275344| 1.28837|103.81099|     Central Region|         1|\n|289234| 1.34561|103.95984|        East Region|         2|\n|294281| 1.31125|103.83816|     Central Region|         1|\n|324945| 1.28976|103.80896|     Central Region|         1|\n|330089| 1.28677|103.81244|     Central Region|         1|\n|330095| 1.28537|103.81087|     Central Region|         1|\n|344803| 1.34943|103.95951|        East Region|         2|\n|355955|  1.3142|103.90232|     Central Region|         1|\n|369141|  1.3115|103.83759|     Central Region|         1|\n+------+--------+---------+-------------------+----------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1578837668818_210267631","id":"20200112-062331_825999172","dateCreated":"2020-01-12T14:01:08+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4312"},{"text":"%pyspark\nfrom pyspark.ml.feature import StandardScaler\n\nfeatureCols=['latitude','longitude']\nfeaturedf = popularity_df.select(featureCols).show()\n\ndef getVector(df,featureCols):\n\tassembler = VectorAssembler(inputCols=featureCols,outputCol=\"features\")\n\tvector=assembler.transform(df)\n\treturn vector\n\t\nvectorDf=getVector(popularity_df,featureCols)\nvectorDf.show()\n\ninput_df = vectorDf.select('popularity', 'features')\n\nscaler = StandardScaler(inputCol='features', outputCol='scaledFeatures', withStd=True, withMean=True)\nscalerModel = scaler.fit(input_df)\nscaled_input_df = scalerModel.transform(input_df)\n\n# Split the data into training and test sets (80 , 20 rule)\n(training_df, test_df) = scaled_input_df.randomSplit([0.8, 0.2])\n\ntraining_df.show()\ntest_df.show()","user":"anonymous","dateUpdated":"2020-01-12T14:01:44+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------+---------+\n|latitude|longitude|\n+--------+---------+\n| 1.44255| 103.7958|\n| 1.33235|103.78521|\n| 1.44246|103.79667|\n| 1.34541|103.95712|\n| 1.34567|103.95963|\n| 1.34702|103.96103|\n| 1.34348|103.96337|\n| 1.32304|103.91363|\n| 1.32458|103.91163|\n| 1.32461|103.91191|\n| 1.28875|103.80814|\n| 1.28837|103.81099|\n| 1.34561|103.95984|\n| 1.31125|103.83816|\n| 1.28976|103.80896|\n| 1.28677|103.81244|\n| 1.28537|103.81087|\n| 1.34943|103.95951|\n|  1.3142|103.90232|\n|  1.3115|103.83759|\n+--------+---------+\nonly showing top 20 rows\n\n+------+--------+---------+-------------------+----------+-------------------+\n|    id|latitude|longitude|neighbourhood_group|popularity|           features|\n+------+--------+---------+-------------------+----------+-------------------+\n| 49091| 1.44255| 103.7958|       North Region|         3| [1.44255,103.7958]|\n| 50646| 1.33235|103.78521|     Central Region|         1|[1.33235,103.78521]|\n| 56334| 1.44246|103.79667|       North Region|         3|[1.44246,103.79667]|\n| 71609| 1.34541|103.95712|        East Region|         2|[1.34541,103.95712]|\n| 71896| 1.34567|103.95963|        East Region|         2|[1.34567,103.95963]|\n| 71903| 1.34702|103.96103|        East Region|         2|[1.34702,103.96103]|\n| 71907| 1.34348|103.96337|        East Region|         2|[1.34348,103.96337]|\n|241503| 1.32304|103.91363|        East Region|         2|[1.32304,103.91363]|\n|241508| 1.32458|103.91163|        East Region|         2|[1.32458,103.91163]|\n|241510| 1.32461|103.91191|        East Region|         2|[1.32461,103.91191]|\n|275343| 1.28875|103.80814|     Central Region|         1|[1.28875,103.80814]|\n|275344| 1.28837|103.81099|     Central Region|         1|[1.28837,103.81099]|\n|289234| 1.34561|103.95984|        East Region|         2|[1.34561,103.95984]|\n|294281| 1.31125|103.83816|     Central Region|         1|[1.31125,103.83816]|\n|324945| 1.28976|103.80896|     Central Region|         1|[1.28976,103.80896]|\n|330089| 1.28677|103.81244|     Central Region|         1|[1.28677,103.81244]|\n|330095| 1.28537|103.81087|     Central Region|         1|[1.28537,103.81087]|\n|344803| 1.34943|103.95951|        East Region|         2|[1.34943,103.95951]|\n|355955|  1.3142|103.90232|     Central Region|         1| [1.3142,103.90232]|\n|369141|  1.3115|103.83759|     Central Region|         1| [1.3115,103.83759]|\n+------+--------+---------+-------------------+----------+-------------------+\nonly showing top 20 rows\n\n+----------+-------------------+--------------------+\n|popularity|           features|      scaledFeatures|\n+----------+-------------------+--------------------+\n|         1|[1.24391,103.83915]|[-2.3027486080223...|\n|         1|[1.24526,103.83999]|[-2.2585108654236...|\n|         1|[1.24847,103.82389]|[-2.1533233441333...|\n|         1|[1.24881,103.82364]|[-2.1421819867381...|\n|         1|[1.24918,103.82509]|[-2.1300575683962...|\n|         1|[1.24992,103.82441]|[-2.1058087317125...|\n|         1| [1.2504,103.82539]|[-2.0900797565663...|\n|         1|[1.25046,103.82529]|[-2.0881136346730...|\n|         1|[1.25284,103.82225]|[-2.0101241329064...|\n|         1|[1.25306,103.82268]|[-2.0029150192977...|\n|         1|  [1.25602,103.821]|[-1.9059196725627...|\n|         1|[1.25639,103.82302]|[-1.8937952542209...|\n|         1|[1.26478,103.81762]|[-1.6188658761444...|\n|         1| [1.26504,103.8146]|[-1.6103460146069...|\n|         1|[1.26569,103.81606]|[-1.5890463607630...|\n|         1|[1.26582,103.81531]|[-1.5847864299943...|\n|         1|[1.26603,103.81693]|[-1.5779050033678...|\n|         1|[1.26624,103.81097]|[-1.5710235767413...|\n|         1|[1.26649,103.81585]|[-1.5628314021860...|\n|         1| [1.2666,103.81597]|[-1.5592268453817...|\n+----------+-------------------+--------------------+\nonly showing top 20 rows\n\n+----------+-------------------+--------------------+\n|popularity|           features|      scaledFeatures|\n+----------+-------------------+--------------------+\n|         1|[1.24387,103.84246]|[-2.3040593559511...|\n|         1|[1.24853,103.82502]|[-2.1513572222400...|\n|         1|[1.25054,103.82551]|[-2.0854921388153...|\n|         1|[1.25088,103.82482]|[-2.0743507814200...|\n|         1|[1.26513,103.81722]|[-1.6073968317669...|\n|         1|[1.26666,103.81507]|[-1.5572607234884...|\n|         1|[1.26685,103.81035]|[-1.5510346708264...|\n|         1|[1.26701,103.81512]|[-1.5457916791110...|\n|         1|[1.26801,103.81384]|[-1.5130229808897...|\n|         1|[1.27173,103.82232]|[-1.3911234235066...|\n|         1|  [1.272,103.82188]|[-1.3822758749868...|\n|         1| [1.27225,103.8331]|[-1.3740837004315...|\n|         1|[1.27228,103.83413]|[-1.3731006394849...|\n|         1|[1.27237,103.83233]|[-1.3701514566450...|\n|         1|[1.27242,103.80923]|[-1.3685130217339...|\n|         1|[1.27247,103.80896]|[-1.3668745868228...|\n|         1|[1.27278,103.83291]|[-1.3567162903742...|\n|         1|[1.27316,103.84648]|[-1.3442641850501...|\n|         1|[1.27323,103.84648]|[-1.3419703761747...|\n|         1|[1.27334,103.84498]|[-1.3383658193703...|\n+----------+-------------------+--------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1578837668818_435711862","id":"20200112-062754_1487683845","dateCreated":"2020-01-12T14:01:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4313","dateFinished":"2020-01-12T14:01:45+0000","dateStarted":"2020-01-12T14:01:44+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=463","http://172.17.0.2:4040/jobs/job?id=464","http://172.17.0.2:4040/jobs/job?id=465","http://172.17.0.2:4040/jobs/job?id=466","http://172.17.0.2:4040/jobs/job?id=467"],"interpreterSettingId":"spark"}}},{"text":"%pyspark\ndef Training(trainDF):\n\tprint(\"Training began\")\n\tlogisticRegression = LogisticRegression(labelCol=\"popularity\", featuresCol=\"scaledFeatures\",elasticNetParam=0.8, family=\"multinomial\",maxIter=100)\n\tmodel=logisticRegression.fit(trainDF)\n\tprint(\"Training stoped\")\n\treturn model \n\t\nmodel = Training(training_df)\n\n# prdict\npredictions = model.transform(test_df)\n\n# predicted data \npredictions.select(\"prediction\", \"popularity\", \"features\").show(50)","user":"anonymous","dateUpdated":"2020-01-12T14:01:46+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Training began\nTraining stoped\n+----------+----------+-------------------+\n|prediction|popularity|           features|\n+----------+----------+-------------------+\n|       1.0|         1|[1.24387,103.84246]|\n|       1.0|         1|[1.24853,103.82502]|\n|       1.0|         1|[1.25054,103.82551]|\n|       1.0|         1|[1.25088,103.82482]|\n|       1.0|         1|[1.26513,103.81722]|\n|       1.0|         1|[1.26666,103.81507]|\n|       1.0|         1|[1.26685,103.81035]|\n|       1.0|         1|[1.26701,103.81512]|\n|       1.0|         1|[1.26801,103.81384]|\n|       1.0|         1|[1.27173,103.82232]|\n|       1.0|         1|  [1.272,103.82188]|\n|       1.0|         1| [1.27225,103.8331]|\n|       1.0|         1|[1.27228,103.83413]|\n|       1.0|         1|[1.27237,103.83233]|\n|       1.0|         1|[1.27242,103.80923]|\n|       1.0|         1|[1.27247,103.80896]|\n|       1.0|         1|[1.27278,103.83291]|\n|       1.0|         1|[1.27316,103.84648]|\n|       1.0|         1|[1.27323,103.84648]|\n|       1.0|         1|[1.27334,103.84498]|\n|       1.0|         1|[1.27337,103.84728]|\n|       1.0|         1| [1.2735,103.84529]|\n|       1.0|         1|[1.27357,103.84359]|\n|       1.0|         1|[1.27393,103.83296]|\n|       1.0|         1|[1.27396,103.84523]|\n|       1.0|         1|[1.27399,103.84339]|\n|       1.0|         1|  [1.274,103.84603]|\n|       1.0|         1|[1.27405,103.84367]|\n|       1.0|         1|[1.27414,103.84596]|\n|       1.0|         1|[1.27419,103.83388]|\n|       1.0|         1| [1.27436,103.8345]|\n|       1.0|         1| [1.27438,103.8361]|\n|       1.0|         1|[1.27439,103.84458]|\n|       1.0|         1|[1.27439,103.84714]|\n|       1.0|         1|[1.27442,103.84459]|\n|       1.0|         1| [1.2745,103.84656]|\n|       1.0|         1|[1.27451,103.84416]|\n|       1.0|         1|[1.27455,103.84541]|\n|       1.0|         1|[1.27458,103.84651]|\n|       1.0|         1|[1.27463,103.84528]|\n|       1.0|         1|[1.27472,103.84536]|\n|       1.0|         1|[1.27478,103.84455]|\n|       1.0|         1|[1.27479,103.84384]|\n|       1.0|         1|[1.27493,103.84029]|\n|       1.0|         1|[1.27494,103.84422]|\n|       1.0|         1|[1.27494,103.84435]|\n|       1.0|         1|[1.27495,103.83695]|\n|       1.0|         1|[1.27501,103.84524]|\n|       1.0|         1|[1.27503,103.84438]|\n|       1.0|         1|[1.27506,103.84385]|\n+----------+----------+-------------------+\nonly showing top 50 rows\n\n"}]},"apps":[],"jobName":"paragraph_1578837668818_-92913985","id":"20200112-062924_2085185081","dateCreated":"2020-01-12T14:01:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4314","dateFinished":"2020-01-12T14:01:48+0000","dateStarted":"2020-01-12T14:01:46+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=468","http://172.17.0.2:4040/jobs/job?id=469","http://172.17.0.2:4040/jobs/job?id=470","http://172.17.0.2:4040/jobs/job?id=471","http://172.17.0.2:4040/jobs/job?id=472","http://172.17.0.2:4040/jobs/job?id=473","http://172.17.0.2:4040/jobs/job?id=474","http://172.17.0.2:4040/jobs/job?id=475","http://172.17.0.2:4040/jobs/job?id=476","http://172.17.0.2:4040/jobs/job?id=477","http://172.17.0.2:4040/jobs/job?id=478","http://172.17.0.2:4040/jobs/job?id=479","http://172.17.0.2:4040/jobs/job?id=480","http://172.17.0.2:4040/jobs/job?id=481","http://172.17.0.2:4040/jobs/job?id=482","http://172.17.0.2:4040/jobs/job?id=483","http://172.17.0.2:4040/jobs/job?id=484","http://172.17.0.2:4040/jobs/job?id=485","http://172.17.0.2:4040/jobs/job?id=486","http://172.17.0.2:4040/jobs/job?id=487","http://172.17.0.2:4040/jobs/job?id=488","http://172.17.0.2:4040/jobs/job?id=489","http://172.17.0.2:4040/jobs/job?id=490","http://172.17.0.2:4040/jobs/job?id=491","http://172.17.0.2:4040/jobs/job?id=492","http://172.17.0.2:4040/jobs/job?id=493","http://172.17.0.2:4040/jobs/job?id=494","http://172.17.0.2:4040/jobs/job?id=495","http://172.17.0.2:4040/jobs/job?id=496","http://172.17.0.2:4040/jobs/job?id=497","http://172.17.0.2:4040/jobs/job?id=498","http://172.17.0.2:4040/jobs/job?id=499","http://172.17.0.2:4040/jobs/job?id=500","http://172.17.0.2:4040/jobs/job?id=501","http://172.17.0.2:4040/jobs/job?id=502","http://172.17.0.2:4040/jobs/job?id=503","http://172.17.0.2:4040/jobs/job?id=504","http://172.17.0.2:4040/jobs/job?id=505","http://172.17.0.2:4040/jobs/job?id=506","http://172.17.0.2:4040/jobs/job?id=507","http://172.17.0.2:4040/jobs/job?id=508","http://172.17.0.2:4040/jobs/job?id=509","http://172.17.0.2:4040/jobs/job?id=510","http://172.17.0.2:4040/jobs/job?id=511","http://172.17.0.2:4040/jobs/job?id=512","http://172.17.0.2:4040/jobs/job?id=513","http://172.17.0.2:4040/jobs/job?id=514","http://172.17.0.2:4040/jobs/job?id=515","http://172.17.0.2:4040/jobs/job?id=516","http://172.17.0.2:4040/jobs/job?id=517","http://172.17.0.2:4040/jobs/job?id=518","http://172.17.0.2:4040/jobs/job?id=519","http://172.17.0.2:4040/jobs/job?id=520","http://172.17.0.2:4040/jobs/job?id=521","http://172.17.0.2:4040/jobs/job?id=522","http://172.17.0.2:4040/jobs/job?id=523","http://172.17.0.2:4040/jobs/job?id=524","http://172.17.0.2:4040/jobs/job?id=525","http://172.17.0.2:4040/jobs/job?id=526","http://172.17.0.2:4040/jobs/job?id=527","http://172.17.0.2:4040/jobs/job?id=528","http://172.17.0.2:4040/jobs/job?id=529","http://172.17.0.2:4040/jobs/job?id=530","http://172.17.0.2:4040/jobs/job?id=531","http://172.17.0.2:4040/jobs/job?id=532","http://172.17.0.2:4040/jobs/job?id=533","http://172.17.0.2:4040/jobs/job?id=534","http://172.17.0.2:4040/jobs/job?id=535","http://172.17.0.2:4040/jobs/job?id=536","http://172.17.0.2:4040/jobs/job?id=537","http://172.17.0.2:4040/jobs/job?id=538","http://172.17.0.2:4040/jobs/job?id=539","http://172.17.0.2:4040/jobs/job?id=540","http://172.17.0.2:4040/jobs/job?id=541","http://172.17.0.2:4040/jobs/job?id=542","http://172.17.0.2:4040/jobs/job?id=543","http://172.17.0.2:4040/jobs/job?id=544","http://172.17.0.2:4040/jobs/job?id=545","http://172.17.0.2:4040/jobs/job?id=546","http://172.17.0.2:4040/jobs/job?id=547","http://172.17.0.2:4040/jobs/job?id=548","http://172.17.0.2:4040/jobs/job?id=549","http://172.17.0.2:4040/jobs/job?id=550","http://172.17.0.2:4040/jobs/job?id=551","http://172.17.0.2:4040/jobs/job?id=552","http://172.17.0.2:4040/jobs/job?id=553","http://172.17.0.2:4040/jobs/job?id=554","http://172.17.0.2:4040/jobs/job?id=555","http://172.17.0.2:4040/jobs/job?id=556","http://172.17.0.2:4040/jobs/job?id=557","http://172.17.0.2:4040/jobs/job?id=558","http://172.17.0.2:4040/jobs/job?id=559","http://172.17.0.2:4040/jobs/job?id=560","http://172.17.0.2:4040/jobs/job?id=561","http://172.17.0.2:4040/jobs/job?id=562","http://172.17.0.2:4040/jobs/job?id=563","http://172.17.0.2:4040/jobs/job?id=564","http://172.17.0.2:4040/jobs/job?id=565"],"interpreterSettingId":"spark"}}},{"text":"%pyspark\n# Q4.1\ntotalrentals=spark.sql(\"select count(*) as totalrentals from  tempory_view \")\ntotalrentals.show()\navail_365=spark.sql(\"select count(*) as avail_365 from tempory_view where availability_365=365 \")\navail_365.show()\n","user":"anonymous","dateUpdated":"2020-01-12T14:01:52+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------------+\n|totalrentals|\n+------------+\n|        7921|\n+------------+\n\n+---------+\n|avail_365|\n+---------+\n|      843|\n+---------+\n\n"}]},"apps":[],"jobName":"paragraph_1578837668818_-225137001","id":"20200112-063014_1521708420","dateCreated":"2020-01-12T14:01:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4315","dateFinished":"2020-01-12T14:01:52+0000","dateStarted":"2020-01-12T14:01:52+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=566","http://172.17.0.2:4040/jobs/job?id=567"],"interpreterSettingId":"spark"}}},{"text":"%pyspark\n# Q4.2\nneighbourhood_rentals=spark.sql(\"select neighbourhood_group,count(*) as rentalcount from tempory_view group by neighbourhood_group order by rentalcount \")\nneighbourhood_rentals.show()\nplotting = neighbourhood_rentals.toPandas()\nhistPlot = plotting.plot.bar(x='neighbourhood_group', y='rentalcount', color='b')\n","user":"anonymous","dateUpdated":"2020-01-12T14:01:57+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------------+-----------+\n|neighbourhood_group|rentalcount|\n+-------------------+-----------+\n|            Punggol|          1|\n|            Orchard|          1|\n|        Jurong West|          1|\n|          Sembawang|          1|\n|        Bukit Merah|          1|\n|             Rochor|          1|\n|            Hougang|          1|\n|   Southern Islands|          1|\n|             Museum|          2|\n|      Downtown Core|          2|\n|               null|         14|\n|       North Region|        203|\n|  North-East Region|        344|\n|        East Region|        508|\n|        West Region|        539|\n|     Central Region|       6301|\n+-------------------+-----------+\n\n<matplotlib.figure.Figure at 0x7f9e76c75b90>\n"},{"type":"IMG","data":"\n"}]},"apps":[],"jobName":"paragraph_1578837668818_-1761847684","id":"20200112-063036_260595121","dateCreated":"2020-01-12T14:01:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4316","dateFinished":"2020-01-12T14:01:58+0000","dateStarted":"2020-01-12T14:01:57+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=568","http://172.17.0.2:4040/jobs/job?id=569","http://172.17.0.2:4040/jobs/job?id=570"],"interpreterSettingId":"spark"}}},{"text":"%pyspark\n# Q4.3\nneighbourhood_grp_avg_price=spark.sql(\"select neighbourhood_group, avg(cast(price as float)) as avg_price from tempory_view where room_type = 'Private room' group by neighbourhood_group order by avg_price\")\nneighbourhood_grp_avg_price.show()\nplotting = neighbourhood_grp_avg_price.toPandas()\nhistPlot = plotting.plot.bar(x='neighbourhood_group', y='avg_price', color='b')","user":"anonymous","dateUpdated":"2020-01-12T14:02:01+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------------+------------------+\n|neighbourhood_group|         avg_price|\n+-------------------+------------------+\n|  North-East Region| 80.06296296296296|\n|       North Region| 82.35460992907801|\n|     Central Region|114.47408742676882|\n|        East Region|117.23497267759562|\n|        West Region|117.82539682539682|\n+-------------------+------------------+\n\n\n"},{"type":"IMG","data":"\n\n"},{"type":"TEXT","data":"<matplotlib.figure.Figure at 0x7f9e7c4c5b50>"}]},"apps":[],"jobName":"paragraph_1578837668818_-486874041","id":"20200112-063101_151668131","dateCreated":"2020-01-12T14:01:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4317","dateFinished":"2020-01-12T14:02:03+0000","dateStarted":"2020-01-12T14:02:02+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=571","http://172.17.0.2:4040/jobs/job?id=572","http://172.17.0.2:4040/jobs/job?id=573"],"interpreterSettingId":"spark"}}},{"text":"%pyspark\n# Q4.4\navgprice_by_neibourhood=spark.sql(\"select neighbourhood_group, neighbourhood,avg(cast(price as float)) as avg_price from tempory_view where room_type = 'Private room' group by neighbourhood_group,neighbourhood order by avg_price desc limit 10\")\navgprice_by_neibourhood.show()","user":"anonymous","dateUpdated":"2020-01-12T14:02:05+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------------+----------------+------------------+\n|neighbourhood_group|   neighbourhood|         avg_price|\n+-------------------+----------------+------------------+\n|     Central Region|Southern Islands| 649.6666666666666|\n|     Central Region|    Marina South|             419.0|\n|        West Region|   Bukit Panjang|409.44827586206895|\n|        West Region|     Jurong East|182.25757575757575|\n|     Central Region|   Downtown Core| 163.5047619047619|\n|     Central Region| Singapore River|150.66666666666666|\n|     Central Region|         Orchard|146.89795918367346|\n|     Central Region|       Toa Payoh|            142.78|\n|     Central Region|          Bishan|138.92105263157896|\n|     Central Region|          Outram|135.26639344262296|\n+-------------------+----------------+------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1578837668819_-246738941","id":"20200112-063122_915888701","dateCreated":"2020-01-12T14:01:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4318","dateFinished":"2020-01-12T14:02:05+0000","dateStarted":"2020-01-12T14:02:05+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=574"],"interpreterSettingId":"spark"}}},{"text":"%pyspark\n#Q4.5\nlowestprice_by_roomtype=spark.sql(\"select StRank, host_id, price, room_type, neighbourhood_group, neighbourhood from (SELECT ROW_NUMBER() OVER (PARTITION BY room_type ORDER BY price asc) AS StRank, host_id, price, room_type, neighbourhood_group, neighbourhood FROM tempory_view )  WHERE StRank IN (1,2,3,4,5) and room_type in ('Shared room','Entire home/apt', 'Private room')\")\nlowestprice_by_roomtype.show(100)\n","user":"anonymous","dateUpdated":"2020-01-12T14:02:08+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------+---------+-----+---------------+-------------------+-------------+\n|StRank|  host_id|price|      room_type|neighbourhood_group|neighbourhood|\n+------+---------+-----+---------------+-------------------+-------------+\n|     1| 21900076|   14|    Shared room|        East Region|        Bedok|\n|     2|160839396|   15|    Shared room|        West Region|  Jurong West|\n|     3| 46545593|   18|    Shared room|     Central Region|      Kallang|\n|     4|196709892|   18|    Shared room|     Central Region|       Rochor|\n|     5|  6954638|   19|    Shared room|     Central Region|   Queenstown|\n|     1|114674497|    0|Entire home/apt|     Central Region|       Rochor|\n|     2| 75175440|   14|Entire home/apt|        West Region|Bukit Panjang|\n|     3| 29799617|   14|Entire home/apt|     Central Region|      Geylang|\n|     4| 26246420|   31|Entire home/apt|     Central Region|  Bukit Timah|\n|     5| 73254645|   39|Entire home/apt|       North Region|       Yishun|\n|     1|108408404|   14|   Private room|     Central Region|Marine Parade|\n|     2| 13460992|   15|   Private room|     Central Region|      Geylang|\n|     3| 45343820|   15|   Private room|        East Region|     Tampines|\n|     4| 14021375|   15|   Private room|     Central Region|       Outram|\n|     5| 13503463|   15|   Private room|        West Region|  Jurong West|\n+------+---------+-----+---------------+-------------------+-------------+\n\n"}]},"apps":[],"jobName":"paragraph_1578837668819_-1776864857","id":"20200112-063136_1047166479","dateCreated":"2020-01-12T14:01:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4319","dateFinished":"2020-01-12T14:02:09+0000","dateStarted":"2020-01-12T14:02:08+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=575","http://172.17.0.2:4040/jobs/job?id=576","http://172.17.0.2:4040/jobs/job?id=577","http://172.17.0.2:4040/jobs/job?id=578","http://172.17.0.2:4040/jobs/job?id=579"],"interpreterSettingId":"spark"}}},{"text":"%pyspark\n#Q4.6\nimport matplotlib.pyplot as plt\n\nowners = spark.sql(\"select host_id, host_name, COUNT(*) as rentals from tempory_view group by host_id, host_name Order by rentals DESC\")\ntotal_owners=owners.count()\n\n\nmultiple_rental_owners = spark.sql(\"select host_id, host_name, COUNT(*) as rentals from tempory_view group by host_id, host_name HAVING rentals>1 Order by rentals DESC\")\ntotal_multiple_rental_owners=multiple_rental_owners.count()\nmultiple_owners_percentage = (float(total_multiple_rental_owners)/total_owners)*100.0\nprint(\"Percentage of owners own more than one propert: \")\nprint(multiple_owners_percentage)\n\nlabels = 'Multiple property owners', 'Single property owners'\nsizes = [multiple_owners_percentage, 100 - multiple_owners_percentage]\nexplode = (0.1,0)\nfig1, ax1 = plt.subplots()\nax1.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.show()","user":"anonymous","dateUpdated":"2020-01-12T14:02:11+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Percentage of owners own more than one propert: \n27.3163528977\n<matplotlib.figure.Figure at 0x7f9e49c551d0>\n"},{"type":"IMG","data":"\n"}]},"apps":[],"jobName":"paragraph_1578837668819_-1078395063","id":"20200112-063213_1955172881","dateCreated":"2020-01-12T14:01:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4320","dateFinished":"2020-01-12T14:02:14+0000","dateStarted":"2020-01-12T14:02:11+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=580","http://172.17.0.2:4040/jobs/job?id=581","http://172.17.0.2:4040/jobs/job?id=582","http://172.17.0.2:4040/jobs/job?id=583"],"interpreterSettingId":"spark"}}},{"text":"%pyspark\n#Q4.7\nmonthly_review_count = spark.sql(\"Select month(last_review) month, count(*) as review_count from tempory_view where month(last_review) is not null group by month order by month\")\nmonthly_review_count.show()\nplotting = monthly_review_count.toPandas()\nhistPlot = plotting.plot.bar(x='month', y='review_count', color='b')","user":"anonymous","dateUpdated":"2020-01-12T14:02:16+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----+------------+\n|month|review_count|\n+-----+------------+\n|    1|         241|\n|    2|         236|\n|    3|         235|\n|    4|         249|\n|    5|         334|\n|    6|         455|\n|    7|         983|\n|    8|        1822|\n|    9|         149|\n|   10|         125|\n|   11|         111|\n|   12|         201|\n+-----+------------+\n\n\n"},{"type":"IMG","data":"iVBORw0KGgoAAAANSUhEUgAAAYEAAAENCAYAAADpK9mHAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMS4xLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvAOZPmwAAGmpJREFUeJzt3XuUVOWd7vHvk+bmBUWxY1BA0IMXjNBiQ1qRXsxRFDl4m3MMaJYyTtbBjJpkjieZY+IfunKSYzJqssyM4ywcEU0YxMtoSIREICFeIpEGW0EQbRClhQDCxKAETcPv/FG7tYRquqmqvsD7fNaq1VVvvXv/3qrurqf2u3ftUkRgZmZp+kxnD8DMzDqPQ8DMLGEOATOzhDkEzMwS5hAwM0uYQ8DMLGEOATOzhDkEzMwS5hAwM0uYQ8DMLGHdOnsArTnmmGNi0KBBnT0MM7MDxtKlS9+NiMq29O3yITBo0CDq6uo6exhmZgcMSW+1ta+ng8zMEuYQMDNLmEPAzCxhXX6fgJl1DX/5y19obGxk586dnT0Uy/Tq1Yv+/fvTvXv3otfhEDCzNmlsbKR3794MGjQISZ09nORFBFu3bqWxsZHBgwcXvR5PB5lZm+zcuZO+ffs6ALoISfTt27fkLTOHgJm1mQOgaynH78MhYGaWMIeA2UFAKu7SGTXbYyxtNWHCBP74xz92TLEyevLJJ1m5cmW7rNshYGYHpIhg9+7d+7XM3Llz6dOnTzuNqP04BMzMgHXr1nHaaadx/fXXM2LECH7yk59w9tlnM2LECK644gref/995s2bxxe/+MWPl1m0aBEXX3wxkDsNzbvvvgvAT3/6U0aNGkVVVRXXXXcdu3bt4pFHHuGmm24C4O677+bEE08EYM2aNZx77rktjmvJkiWcc845DB8+nFGjRrF9+3Z27tzJtddeyxlnnMGZZ57Jb37zGwBmzJjBjTfe+PGyEydOZNGiRQAcfvjh3HLLLQwfPpyamho2bdrE7373O+bMmcM3v/lNqqqqWLNmTfmeUBwCZnaAWb16Nddccw3z58/n/vvvZ8GCBSxbtozq6mp++MMfMm7cOBYvXswHH3wAwOzZs5k0adKn1rFq1Spmz57N888/T319PRUVFcycOZPa2lqeffZZAJ599ln69u3LO++8w3PPPceYMWMKjuejjz5i0qRJ3H333bz88sssWLCAQw45hHvuuQeA5cuXM2vWLKZMmdLqkTwffPABNTU1vPzyy9TW1nLfffdxzjnncMkll3DHHXdQX1/PSSedVOpT+CmthoCk6ZI2S1qR1zZbUn12WSepPmsfJOnPeff9a94yZ0laLqlB0o/lwwzMrAgnnHACNTU1LF68mJUrVzJ69Giqqqp48MEHeeutt+jWrRvjx4/n5z//OU1NTTz11FNceumln1rHwoULWbp0KSNHjqSqqoqFCxeydu1aPve5z/H++++zfft21q9fz1VXXcUzzzzDs88+22IIrF69mn79+jFy5EgAjjjiCLp168Zzzz3H1VdfDcCpp57KCSecwOuvv77Px9ajRw8mTpwIwFlnncW6detKfLZa15YPi80A/hl4qLkhIj6OVUl3Ae/l9V8TEVUF1nMvMBVYDMwFxgPz9n/IZpayww47DMjtExg3bhyzZs3aq8+kSZO45557OProoxk5ciS9e/f+1P0RwZQpU7j99tv3Wvbss8/mgQce4JRTTmHMmDFMnz6dF154gbvuuqvgeCKi4KGaEVGwf7du3T61LyN/66B79+4fr6uiooKmpqaC6yinVrcEIuIZYFuh+7J3818E9v4tfLpfP+CIiHghcs/MQ8Bl+z9cM7Ocmpoann/+eRoaGgDYsWPHx++0x44dy7Jly7jvvvv2mgoCOO+883jsscfYvHkzANu2beOtt3JnX66treXOO++ktrb247n8nj17cuSRRxYcx6mnnsqGDRtYsmQJANu3b6epqYna2lpmzpwJwOuvv87bb7/NKaecwqBBg6ivr2f37t2sX7+eF198sdXH2rt3b7Zv376fz1DblLpPYAywKSLeyGsbLOklSb+V1Lz9dDzQmNenMWszswNURHkv+6uyspIZM2Zw5ZVXMmzYMGpqanjttdeA3LvoiRMnMm/evI+nV/INHTqU7373u1xwwQUMGzaMcePGsXHjRgDGjBnD+vXrqa2tpaKiggEDBuxzp3CPHj2YPXs2X/3qVxk+fDjjxo1j586dXH/99ezatYszzjiDSZMmMWPGDHr27Mno0aMZPHgwZ5xxBt/4xjcYMWJEq4918uTJ3HHHHZx55pll3zGsljZZPtVJGgT8IiI+v0f7vUBDRNyV3e4JHB4RWyWdBTwJnA6cAtweEedn/cYA/xARF7dQbyq5qSMG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\n\n"},{"type":"TEXT","data":"<matplotlib.figure.Figure at 0x7f9e49c1ac90>"}]},"apps":[],"jobName":"paragraph_1578837668819_1830701975","id":"20200112-063230_1086903085","dateCreated":"2020-01-12T14:01:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4321","dateFinished":"2020-01-12T14:02:18+0000","dateStarted":"2020-01-12T14:02:16+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=584","http://172.17.0.2:4040/jobs/job?id=585","http://172.17.0.2:4040/jobs/job?id=586"],"interpreterSettingId":"spark"}}},{"text":"%pyspark\n#Q4.8\nopen_365 = spark.sql(\"Select * from tempory_view where availability_365 =365\")\nopen_365.createOrReplaceTempView(\"365_open\")\ntopAvg5Rentals = spark.sql(\"Select neighbourhood_group, neighbourhood, count(*) as count from 365_open where neighbourhood in (Select neighbourhood from 365_open Group By neighbourhood_group, neighbourhood order By avg(price) Limit 5) group by neighbourhood_group, neighbourhood\")\n\ntopAvg5Rentals.show()","user":"anonymous","dateUpdated":"2020-01-12T14:02:20+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------------+--------------------+-----+\n|neighbourhood_group|       neighbourhood|count|\n+-------------------+--------------------+-----+\n|        West Region|Western Water Cat...|    1|\n|        West Region|       Bukit Panjang|    1|\n|       North Region|           Woodlands|   12|\n|  North-East Region|           Serangoon|    8|\n|       North Region|        Lim Chu Kang|    1|\n+-------------------+--------------------+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1578837668819_-1996752106","id":"20200112-063245_2067065444","dateCreated":"2020-01-12T14:01:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4322","dateFinished":"2020-01-12T14:02:21+0000","dateStarted":"2020-01-12T14:02:20+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=587","http://172.17.0.2:4040/jobs/job?id=588","http://172.17.0.2:4040/jobs/job?id=589","http://172.17.0.2:4040/jobs/job?id=590","http://172.17.0.2:4040/jobs/job?id=591","http://172.17.0.2:4040/jobs/job?id=592"],"interpreterSettingId":"spark"}}},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2020-01-12T14:01:08+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578837668819_-588729650","id":"20200112-090713_33116564","dateCreated":"2020-01-12T14:01:08+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4323"}],"name":"Shiwantha_Spark","id":"2F1A6JTNW","noteParams":{},"noteForms":{},"angularObjects":{"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}